//HomeTask1

import java.util.Scanner;

public class HomeTask01{
    public static void main(String[] args){
        System.out.println("Enter your 2 desired numbers: ");
        Scanner sc = new Scanner(System.in);
        int num1 = sc.nextInt();
        int num2 = sc.nextInt();
        int num = 0;
        int prime = 0;
        int prime_count = 0;
        if (num1>num2){
            num = num1;
            num1 = num2;
            num2 = num;
        }
        num = num1;

        num = num1;
        for (int i=num1+1;i<num2;i++){
            num+=1;
            prime_count = 0;
            for (int j=1;j<num+1;j++){
                if (num%j==0){
                    prime_count+=1;
                }
        }
        if (prime_count==2){
            prime+=1;
        }
        
        //System.out.println(num + " " + prime_count);
    }
    System.out.println("There are "+prime+" prime numbers "+"between "+num1+ " and "+ num2); 
    sc.close();
}}


//HomeTask02

import java.util.Scanner;

public class HomeTask02 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String text = sc.nextLine();
        for (int i = 0; i < text.length(); i++) {
            if ((int) text.charAt(i) == (int) 'a') {
                System.out.print((char) 122);
                continue;
            }

            if (((int) text.charAt(i) >= (int) 'a') && ((int) text.charAt(i) <= (int) 'z')) {
                char cur = text.charAt(i);
                int prev = (int) cur - 1;
                char word = (char) prev;
                System.out.print(word);
            }
        }
        sc.close();
    }
}

//HomeTask03

import java.util.Arrays;
import java.util.Scanner;

public class HomeTask03{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the length of the array: ");
        int len = sc.nextInt();
        int[] arr = new int[len];
        for (int i=0;i<len;i++){
            int input = sc.nextInt();
            arr[i]=input;
        }
        for (int j=0;j<len;j++){
            int temp = arr[j];
            arr[j]=arr[len-1];
            arr[len-1]=temp;
            len-=1;
        }
        //System.out.println(Arrays.toString(arr));
        for (int k=0;k<arr.length;k++){
            System.out.print(arr[k]+" ");
        }
        System.out.println();
        sc.close();

        
    }
}

//HomeTask04

import java.util.Arrays;
import java.util.Scanner;

public class HomeTask04{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("N = ");
        int N = sc.nextInt();
        int count = 0;
        boolean duplicate = false;
        int[] arr = new int[N];
        for (int i=0;i<N;i++){
            int input = sc.nextInt();
            arr[i]=input;
        }
        for(int i=0;i<N;i++){
            duplicate = false;
            for(int j=0;j<i;k++){
                if(arr[j]==arr[i]){
                    duplicate = true;
                    break;
                }
            }
            if(duplicate == true){
                continue;
            }
            
            for (int k=0;k<N;k++){
                if (arr[i]==arr[k]){
                    count+=1;
                }
            }
            System.out.println(arr[i]+" - "+ count + " times");
            count=0;
        }

        sc.close();
    }

}


//HomeTask05

import java.util.Scanner;

public class HomeTask05 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[][] arr2D = { { 0, 0, 10, 0, -1 },
                { 0, -1, 0, 0, -1 },
                { -1, 0, -1, 0, 0 }, // row and col pos = 3,2
                { 0, -1, 7, 0, -1 },
                { 0, -1, 0, -1, 0 }
        };
        System.out.println("Initial Map:");
        printMap(arr2D);
        int row = arr2D.length;
        int col = arr2D[0].length;
        int row_pos = -1, col_pos = -1;
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if ((row_pos != -1) && (col_pos != -1)) {
                    break;
                }
                if (arr2D[i][j] == 7) {
                    row_pos = i;
                    col_pos = j;
                    break;
                }
            }
        }
        int player = arr2D[row_pos][col_pos];
        int turns = 5;
        int temp = 0;
        while (turns > 0) {
            int new_row = row_pos, new_col = col_pos;
            System.out.printf("Enter move %d: ", (6 - turns));
            String inp = sc.nextLine();
            if (inp.equals("UP")) {
                if (row_pos > 0) {
                    new_row = row_pos - 1;
                    temp = arr2D[new_row][col_pos];
                    arr2D[new_row][col_pos] = player;
                    arr2D[row_pos][col_pos] = 0;
                    row_pos = new_row;
                } else {
                    System.out.println("Player fell outside the playing area. Game over!");
                    break;
                }
            } else if (inp.equals("RIGHT")) {
                if (col_pos < arr2D[0].length - 1) {
                    new_col = col_pos + 1;
                    temp = arr2D[row_pos][new_col];
                    arr2D[row_pos][new_col] = player;
                    arr2D[row_pos][col_pos] = 0;
                    col_pos = new_col;
                } else {
                    System.out.println("Player fell outside the playing area. Game over!");
                    break;
                }
            } else if (inp.equals("LEFT")) {
                if (col_pos > 0) {
                    new_col = col_pos - 1;
                    temp = arr2D[row_pos][new_col];
                    arr2D[row_pos][new_col] = player;
                    arr2D[row_pos][col_pos] = 0;
                    col_pos = new_col;
                } else {
                    System.out.println("Player fell outside the playing area. Game over!");
                    break;
                }
            } else if (inp.equals("DOWN")) {
                if (row_pos < arr2D.length - 1) {
                    new_row = row_pos + 1;
                    temp = arr2D[new_row][col_pos];
                    arr2D[new_row][col_pos] = player;
                    arr2D[row_pos][col_pos] = 0;
                    row_pos = new_row;
                } else {
                    System.out.println("Player fell outside the playing area. Game over!");
                    break;
                }
            } else {
                System.out.println("Invalid Operation");
            }
            if (temp == -1) {
                System.out.println("Player stepped on mine. Game Over!");
                break;
            } else if (temp == 10) {
                System.out.println("Treasure found. You win!");
                System.out.println("Final state:");
                printMap(arr2D);
                break;
            }

            System.out.println("Current state:");
            printMap(arr2D);
            turns--;
        }
        if (turns == 0) {
            System.out.println("Failed to find the treasure.");
        }
        sc.close();
    }

    public static void printMap(int[][] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[0].length; j++) {
                System.out.print(arr[i][j] + "        ");
            }
            System.out.println();
        }
    }
}
